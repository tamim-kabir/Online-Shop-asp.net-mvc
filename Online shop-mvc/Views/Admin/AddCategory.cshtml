@model Online_shop_mvc.DAL.Tbl_Category

@{
    ViewBag.Title = "AddCategory";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">

    <!-- Page-breadcrumb -->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="../Admin/Index">Deshboard</a>
        </li>
        <li class="breadcrumb-item">
            <a href="../Admin/Categories">Categories</a>
        </li>
        <li class="breadcrumb-item active">
            AddCategory
        </li>
    </ol>
    <p class="mb-4">
        Add a New Category Fill the all information. 
    </p>

    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <span>Categories Details</span>
            <a class="btn btn-info pull-right" href="../Admin/AddCategory"><i class="fas fa-plus"></i><span>Add New</span></a>
        </div>
        <div class="card-body">
            @using(Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <label class="control-label">Category Name</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control", required = "required", autofocus = "autofocus", placeholder = "Enter Category Name" } })
                        @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label">Description</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CategoryDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CategoryDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label">Active</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label">Deleted</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                    @Html.LabelFor(model => model.CatagoryImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CatagoryImagePath, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CatagoryImagePath, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    <a onclick="window.history.back();" class="btn btn-danger">Cancle</a>
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            }
        </div>
    </div>

</div>
<!-- /.container-fluid -->
